{"version":3,"sources":["contexts/display-text-context.js","components/Display.js","components/BaseSelectionMenu.js","components/SecondaryDisplay.js","components/ButtonPad.js","util/operations.js","util/expression-evaluation.js","util/display-operation.js","util/advanced-operation-pad.js","util/numpad.js","util/basic-operation-pad.js","components/MainScreen.js","App.js","index.js"],"names":["DisplayTextContext","React","createContext","Display","displayText","useContext","displayParagraph","useRef","useLayoutEffect","current","scrollLeft","scrollWidth","Paper","square","elevation","style","padding","textAlign","Typography","ref","fontSize","overflowX","whiteSpace","useStyles","makeStyles","baseSelectionRoot","fontFamily","margin","minWidth","baseSelectionInput","BaseSelectionMenu","props","classes","Select","className","inputProps","onChange","e","setBase","target","value","selectedBase","MenuItem","Array","from","length","_","i","map","item","slice","memo","findLastNumberInText","text","tokens","split","isNaN","BigInt","stylizeNumberString","numberString","substring","repeat","match","join","toUpperCase","SecondaryDisplay","bin","setBin","useState","onesComplement","setOnesComplement","twosComplement","setTwosComplement","hex","setHex","customBase","setCustomBase","customBaseConverted","setCustomBaseConverted","scrollableElements","useEffect","lastNumber","stylizedNumberString","toString","stylizedBinString","stylizedOnesComplementStringArray","forEach","char","push","lastNumberAbs","lastNumberAbsMinusOne","stylizedTwosComplementStringArray","element","Grid","container","wrap","ButtonPad","setDisplayText","justify","height","width","operations","entries","operation","onClick","xs","Button","color","disableFocusRipple","allOperations","Map","unaryOperations","evaluateOperation","outputArray","operationArray","result","operator","pop","rightNumber","get","evaluate","leftNumber","appendOperation","itemText","lastToken","appendUnaryOperation","appendParentheses","openingParenthesesCount","closingParenthesesCount","reduce","token","appendNumber","negate","sign","Math","clear","__","backspace","expression","checkExpression","preprocessedDisplayText","insertMissingClosingParentheses","lastOperation","lastOperationDetails","tokenOperationDetails","precedence","rtl","evaluateExpression","console","log","alert","advancedOperationPad","displayOperation","left","right","rightThirtyTwoBits","rotateAmount","rotateResult","unary","number","operationDetails","set","numpad","basicOperationPad","MainScreen","display","flexDirection","Provider","flex","spacing","alignItems","lightTheme","createMuiTheme","palette","background","default","paper","primary","main","secondary","type","darkTheme","App","darkMode","setDarkMode","mql","window","matchMedia","matches","addEventListener","theme","CssBaseline","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a282b2a4.chunk.js","sourcesContent":["import React from \"react\";\n\nconst DisplayTextContext = React.createContext( );\n\nexport default DisplayTextContext;\n","import React from \"react\";\nimport DisplayTextContext from \"../contexts/display-text-context\";\nimport { Paper, Typography } from \"@material-ui/core\";\n\nfunction Display( ) {\n\tconst [ displayText ] = React.useContext( DisplayTextContext );\n\tconst displayParagraph = React.useRef( null );\n\n\tReact.useLayoutEffect( ( ) => {\n\t\tdisplayParagraph.current.scrollLeft = displayParagraph.current.scrollWidth; // Scroll to end.\n\t}, [ displayText ] );\n\n\treturn (\n\t\t<Paper square elevation={ 0 } style={ { padding: \"0px 16px\", textAlign: \"right\" } }>\n\t\t\t<Typography ref={ displayParagraph } style={ { fontSize: \"36px\", overflowX: \"scroll\", whiteSpace: \"nowrap\" } }>\n\t\t\t\t{ displayText }\n\t\t\t</Typography>\n\t\t</Paper>\n\t);\n}\n\nexport default Display;\n","import React from \"react\";\nimport { makeStyles, MenuItem, Select } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles( {\n\tbaseSelectionRoot: {\n\t\tfontFamily: \"Roboto Mono\",\n\t\tmargin: \"0px 18px 20px 0px\",\n\t\tminWidth: \"75px\"\n\t},\n\tbaseSelectionInput: {\n\t\tpadding: \"0px 0px 5px\"\n\t}\n} );\n\nfunction BaseSelectionMenu( props ) {\n\tconst classes = useStyles( );\n\n\treturn (\n\t\t<Select className={ classes.baseSelectionRoot } inputProps={ { className: classes.baseSelectionInput } } onChange={ ( e ) => props.setBase( e.target.value ) } value={ props.selectedBase }>\n\t\t\t<MenuItem style={ { fontFamily: \"Roboto Mono\" } } value={ 0 }>NONE:</MenuItem>\n\n\t\t\t{\n\t\t\t\tArray.from( { length: 35 }, ( _, i ) => i + 2 ).map( ( item ) => (\n\t\t\t\t\t<MenuItem key={ item } style={ { fontFamily: \"Roboto Mono\" } } value={ item }>B{ ( \"0\" + item ).slice( -2 ) }:</MenuItem>\n\t\t\t\t) )\n\t\t\t}\n\t\t</Select>\n\t);\n}\n\nBaseSelectionMenu.propTypes = {\n\tselectedBase: PropTypes.number.isRequired,\n\tsetBase: PropTypes.func.isRequired\n};\n\nexport default React.memo( BaseSelectionMenu );\n","import React from \"react\";\nimport DisplayTextContext from \"../contexts/display-text-context\";\nimport { Grid, makeStyles, Paper, Typography } from \"@material-ui/core\";\nimport BaseSelectionMenu from \"./BaseSelectionMenu\";\n\n// Find the last number in text separated by spaces.\nfunction findLastNumberInText( text ) {\n\tconst tokens = text.split( \" \" );\n\n\tfor ( let i = tokens.length - 1; i >= 0; i-- ) {\n\t\tif ( !isNaN( tokens[ i ] ) ) {\n\t\t\treturn BigInt( tokens[ i ] );\n\t\t}\n\t}\n\n\treturn 0n; // No number found.\n}\n\n/* Stylize a number represented as a string. Will prepend 0s to make the number of digits divisible by 4. If the number of digits is already divisible\n * by 4, the function will add four more 0s. Then, the function will add spaces every four digits. The number represented as a string must have a sign\n * character at the beginning.\n*/\nfunction stylizeNumberString( numberString ) {\n\treturn numberString.substring( 0, 1 ) + ( \"0\".repeat( 4 - ( ( numberString.length - 1 ) % 4 ) ) + numberString.substring( 1 ) ).match( /.{1,4}/g ).join( \" \" ).toUpperCase( );\n}\n\nconst useStyles = makeStyles( {\n\tdisplayText: {\n\t\tfontFamily: \"Roboto Mono\",\n\t\tfontSize: \"16px\",\n\t\toverflowX: \"scroll\",\n\t\twhiteSpace: \"pre\"\n\t}\n} );\n\nfunction SecondaryDisplay( ) {\n\tconst [ displayText ] = React.useContext( DisplayTextContext );\n\tconst [ bin, setBin ] = React.useState( );\n\tconst [ onesComplement, setOnesComplement ] = React.useState( );\n\tconst [ twosComplement, setTwosComplement ] = React.useState( );\n\tconst [ hex, setHex ] = React.useState( );\n\tconst [ customBase, setCustomBase ] = React.useState( 0 );\n\tconst [ customBaseConverted, setCustomBaseConverted ] = React.useState( );\n\tconst scrollableElements = React.useRef( [ ] );\n\n\t// Update BIN.\n\tReact.useEffect( ( ) => {\n\t\tconst lastNumber = findLastNumberInText( displayText );\n\t\tconst stylizedNumberString = stylizeNumberString( lastNumber >= 0 ? \" \" + lastNumber.toString( 2 ) : lastNumber.toString( 2 ) );\n\t\tsetBin( stylizedNumberString );\n\t}, [ displayText ] );\n\n\t// Update 1SC.\n\tReact.useEffect( ( ) => {\n\t\tconst lastNumber = findLastNumberInText( displayText );\n\t\tconst lastNumberAbs = lastNumber >= 0 ? lastNumber : BigInt( lastNumber.toString( ).substring( 1 ) );\n\t\tconst stylizedBinString = stylizeNumberString( \" \" + lastNumberAbs.toString( 2 ) );\n\n\t\tif ( lastNumber >= 0 ) {\n\t\t\tsetOnesComplement( stylizedBinString );\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst stylizedOnesComplementStringArray = [ ];\n\n\t\t// Invert all 0s and 1s.\n\t\tstylizedBinString.split( \"\" ).forEach( char => {\n\t\t\tif ( char === \"0\" ) {\n\t\t\t\tstylizedOnesComplementStringArray.push( \"1\" );\n\t\t\t} else if ( char === \"1\" ) {\n\t\t\t\tstylizedOnesComplementStringArray.push( \"0\" );\n\t\t\t} else {\n\t\t\t\tstylizedOnesComplementStringArray.push( char );\n\t\t\t}\n\t\t} );\n\n\t\tsetOnesComplement( stylizedOnesComplementStringArray.join( \"\" ) );\n\t}, [ displayText ] );\n\n\t// Update 2SC.\n\tReact.useEffect( ( ) => {\n\t\tconst lastNumber = findLastNumberInText( displayText );\n\t\tconst lastNumberAbs = lastNumber >= 0 ? lastNumber : BigInt( lastNumber.toString( ).substring( 1 ) );\n\n\t\tif ( lastNumber >= 0 ) {\n\t\t\tconst stylizedBinString = stylizeNumberString( \" \" + lastNumberAbs.toString( 2 ) );\n\t\t\tsetTwosComplement( stylizedBinString );\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst lastNumberAbsMinusOne = lastNumberAbs - 1n; // Subtract 1 now, instead of adding 1 at the end because it's easier to do now.\n\t\tlet stylizedBinString = \"\";\n\n\t\t// Add extra 0 if lastNumberAbs is a power of 2 to account for loss of digit. This is done to align the 2SC representation with other binary representations.\n\t\tif ( ( lastNumberAbs & ( lastNumberAbs - 1n ) ) === 0n ) { // lastNumberAbs is a power of 2.\n\t\t\tstylizedBinString = stylizeNumberString( \" 0\" + lastNumberAbsMinusOne.toString( 2 ) );\n\t\t} else {\n\t\t\tstylizedBinString = stylizeNumberString( \" \" + lastNumberAbsMinusOne.toString( 2 ) );\n\t\t}\n\n\t\tconst stylizedTwosComplementStringArray = [ ];\n\n\t\t// Invert all 0s and 1s.\n\t\tstylizedBinString.split( \"\" ).forEach( char => {\n\t\t\tif ( char === \"0\" ) {\n\t\t\t\tstylizedTwosComplementStringArray.push( \"1\" );\n\t\t\t} else if ( char === \"1\" ) {\n\t\t\t\tstylizedTwosComplementStringArray.push( \"0\" );\n\t\t\t} else {\n\t\t\t\tstylizedTwosComplementStringArray.push( char );\n\t\t\t}\n\t\t} );\n\n\t\tsetTwosComplement( stylizedTwosComplementStringArray.join( \"\" ) );\n\t}, [ displayText ] );\n\n\t// Update HEX.\n\tReact.useEffect( ( ) => {\n\t\tconst lastNumber = findLastNumberInText( displayText );\n\t\tconst stylizedNumberString = stylizeNumberString( lastNumber >= 0 ? \" \" + lastNumber.toString( 16 ) : lastNumber.toString( 16 ) );\n\t\tsetHex( stylizedNumberString );\n\t}, [ displayText ] );\n\n\t// Update custom base.\n\tReact.useEffect( ( ) => {\n\t\tif ( customBase === 0 ) { // NONE is selected.\n\t\t\tsetCustomBaseConverted( \"\" );\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst lastNumber = findLastNumberInText( displayText );\n\t\tconst stylizedNumberString = stylizeNumberString( lastNumber >= 0 ? \" \" + lastNumber.toString( customBase ) : lastNumber.toString( customBase ) );\n\t\tsetCustomBaseConverted( stylizedNumberString );\n\t}, [ customBase, displayText ] );\n\n\tReact.useLayoutEffect( ( ) => {\n\t\tscrollableElements.current.forEach( ( element ) => {\n\t\t\telement.scrollLeft = element.scrollWidth; // Scroll to end.\n\t\t} );\n\t}, [ bin, onesComplement, twosComplement, hex, customBaseConverted ] );\n\n\tconst classes = useStyles( );\n\n\treturn (\n\t\t<Paper square elevation={ 0 } style={ { padding: \"10px 16px 0px\" } }>\n\t\t\t<Grid container wrap=\"nowrap\">\n\t\t\t\t<Grid item>\n\t\t\t\t\t<Typography className={ classes.displayText }>\n\t\t\t\t\t\tBIN:\n\t\t\t\t\t</Typography>\n\n\t\t\t\t\t<Typography className={ classes.displayText }>\n\t\t\t\t\t\t1SC:\n\t\t\t\t\t</Typography>\n\n\t\t\t\t\t<Typography className={ classes.displayText }>\n\t\t\t\t\t\t2SC:\n\t\t\t\t\t</Typography>\n\n\t\t\t\t\t<Typography className={ classes.displayText }>\n\t\t\t\t\t\tHEX:\n\t\t\t\t\t</Typography>\n\n\t\t\t\t\t<BaseSelectionMenu selectedBase={ customBase } setBase={ setCustomBase } />\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid item style={ { overflowX: \"scroll\" } }>\n\t\t\t\t\t<Typography className={ classes.displayText } ref={ element => { scrollableElements.current[ 0 ] = element; } }>\n\t\t\t\t\t\t{ bin }\n\t\t\t\t\t</Typography>\n\n\t\t\t\t\t<Typography className={ classes.displayText } ref={ element => { scrollableElements.current[ 1 ] = element; } }>\n\t\t\t\t\t\t{ onesComplement }\n\t\t\t\t\t</Typography>\n\n\t\t\t\t\t<Typography className={ classes.displayText } ref={ element => { scrollableElements.current[ 2 ] = element; } }>\n\t\t\t\t\t\t{ twosComplement }\n\t\t\t\t\t</Typography>\n\n\t\t\t\t\t<Typography className={ classes.displayText } ref={ element => { scrollableElements.current[ 3 ] = element; } }>\n\t\t\t\t\t\t{ hex }\n\t\t\t\t\t</Typography>\n\n\t\t\t\t\t<Typography className={ classes.displayText } ref={ element => { scrollableElements.current[ 4 ] = element; } }>\n\t\t\t\t\t\t{ customBaseConverted }\n\t\t\t\t\t</Typography>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Paper>\n\t);\n}\n\nexport default SecondaryDisplay;\n","import React from \"react\";\nimport DisplayTextContext from \"../contexts/display-text-context\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nfunction ButtonPad( props ) {\n\tconst [ displayText, setDisplayText ] = React.useContext( DisplayTextContext );\n\n\treturn (\n\t\t<Grid container justify=\"center\" style={ { height: props.height, width: props.width } }>\n\t\t\t{\n\t\t\t\t[ ...props.operations.entries( ) ].map( ( [ operation, { onClick } ] ) => (\n\t\t\t\t\t<Grid item key={ operation } xs={ props.xs }>\n\t\t\t\t\t\t<Button color=\"primary\"\n\t\t\t\t\t\t\tdisableFocusRipple={ true }\n\t\t\t\t\t\t\tonClick={ ( ) => {\n\t\t\t\t\t\t\t\tonClick( operation, displayText, setDisplayText );\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\tstyle={ { fontSize: props.fontSize, height: \"100%\", width: \"100%\" } }>\n\t\t\t\t\t\t\t{ operation }\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Grid>\n\t\t\t\t) )\n\t\t\t}\n\t\t</Grid>\n\t);\n}\n\nButtonPad.propTypes = {\n\tfontSize: PropTypes.string.isRequired,\n\theight: PropTypes.string,\n\toperations: PropTypes.object.isRequired,\n\twidth: PropTypes.string,\n\txs: PropTypes.number.isRequired\n};\n\nexport default ButtonPad;\n","// All operations are added by each button pad.\n\nexport const allOperations = new Map( );\n\nexport const unaryOperations = new Map( );\n","import { allOperations, unaryOperations } from \"./operations\";\n\nexport function checkExpression( expression ) {\n\tconst tokens = expression.split( \" \" );\n\tconst lastToken = tokens[ tokens.length - 1 ];\n\n\tif ( lastToken !== \")\" && isNaN( lastToken ) ) { // Last token is an operator or opening parenthesis.\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\nexport function insertMissingClosingParentheses( text ) {\n\tconst tokens = text.split( \" \" );\n\n\tconst { openingParenthesesCount, closingParenthesesCount } = tokens.reduce( ( { openingParenthesesCount, closingParenthesesCount }, token ) => {\n\t\tif ( token === \"(\" ) {\n\t\t\treturn { openingParenthesesCount: openingParenthesesCount + 1, closingParenthesesCount: closingParenthesesCount };\n\t\t} else if ( token === \")\" ) {\n\t\t\treturn { openingParenthesesCount: openingParenthesesCount, closingParenthesesCount: closingParenthesesCount + 1 };\n\t\t}\n\n\t\treturn { openingParenthesesCount: openingParenthesesCount, closingParenthesesCount: closingParenthesesCount };\n\t}, { openingParenthesesCount: 0, closingParenthesesCount: 0 } );\n\n\treturn \"( \" + text + \" )\".repeat( openingParenthesesCount - closingParenthesesCount ) + \" )\";\n}\n\n// Will throw an undefined exception if the evaluate function returns undefined.\nfunction evaluateOperation( outputArray, operationArray ) {\n\tlet result = \"\";\n\tconst operator = operationArray.pop( );\n\tconst rightNumber = BigInt( outputArray.pop( ) );\n\n\tif ( unaryOperations.get( operator ) ) { // Operator is a unary operator.\n\t\tresult = allOperations.get( operator ).evaluate( rightNumber );\n\t} else {\n\t\tconst leftNumber = BigInt( outputArray.pop( ) );\n\t\tresult = allOperations.get( operator ).evaluate( leftNumber, rightNumber );\n\t}\n\n\toutputArray.push( result.toString( ) );\n}\n\nexport function evaluateExpression( expression ) {\n\tconst outputArray = [ ];\n\tconst operationArray = [ ];\n\tconst tokens = expression.split( \" \" );\n\n\ttokens.forEach( ( token ) => {\n\t\tif ( !isNaN( token ) ) { // Token is a number.\n\t\t\toutputArray.push( token );\n\t\t} else if ( unaryOperations.get( token ) ) { // Token is a unary operator.\n\t\t\toperationArray.push( token );\n\t\t} else if ( token === \"(\" ) {\n\t\t\toperationArray.push( token );\n\t\t} else if ( token === \")\" ) {\n\t\t\twhile ( operationArray[ operationArray.length - 1 ] !== \"(\" ) { // Last element in the operation array is not an opening parenthesis.\n\t\t\t\tevaluateOperation( outputArray, operationArray );\n\t\t\t}\n\n\t\t\toperationArray.pop( ); // Discard the opening parenthesis.\n\t\t} else { // Token is a binary operator.\n\t\t\tlet lastOperation = operationArray[ operationArray.length - 1 ];\n\t\t\tlet lastOperationDetails = allOperations.get( lastOperation );\n\t\t\tlet tokenOperationDetails = allOperations.get( token );\n\n\t\t\twhile ( operationArray.length !== 0 && lastOperation !== \"(\" && // Last element of the operation array contains an operation that isn't an opening parenthesis, and\n                  ( lastOperationDetails.precedence < tokenOperationDetails.precedence || // ( the last operation in the array has a higher precedence than the token operation or\n                  ( lastOperationDetails.precedence === tokenOperationDetails.precedence && // ( the last operation in the array has equal precedence with the token operation and\n                    !tokenOperationDetails.rtl ) ) ) { // the token operation has left-to-right associativity ) ).\n\t\t\t\tevaluateOperation( outputArray, operationArray );\n\n\t\t\t\t// Update loop variables.\n\t\t\t\tlastOperation = operationArray[ operationArray.length - 1 ];\n\t\t\t\tlastOperationDetails = allOperations.get( lastOperation );\n\t\t\t\ttokenOperationDetails = allOperations.get( token );\n\t\t\t}\n\n\t\t\toperationArray.push( token );\n\t\t}\n\t} );\n\n\tif ( outputArray.length > 1 ) {\n\t\tthrow \"Output array has more than 1 element at the end\";\n\t}\n\n\treturn outputArray[ 0 ];\n}\n","import { unaryOperations } from \"./operations\";\nimport { checkExpression, evaluateExpression, insertMissingClosingParentheses } from \"./expression-evaluation\";\n\nexport default {\n\tappendOperation: ( itemText, displayText, setDisplayText ) => {\n\t\tconst tokens = displayText.split( \" \" );\n\t\tconst lastToken = tokens[ tokens.length - 1 ];\n\n\t\tif ( lastToken === \"(\" || unaryOperations.get( lastToken ) ) { // No operations after a beginning parenthesis or unary operation.\n\t\t\treturn;\n\t\t}\n\n\t\tif ( lastToken !== \")\" && isNaN( lastToken ) ) { // Last token is an operator or opening parenthesis.\n\t\t\ttokens.pop( );\n\t\t\ttokens.push( itemText );\n\t\t\tsetDisplayText( tokens.join( \" \" ) );\n\n\t\t\treturn;\n\t\t}\n\n\t\tsetDisplayText( displayText + \" \" + itemText );\n\t},\n\tappendUnaryOperation: ( itemText, displayText, setDisplayText ) => {\n\t\tconst tokens = displayText.split( \" \" );\n\t\tconst lastToken = tokens[ tokens.length - 1 ];\n\n\t\tif ( displayText === \"0\" ) { // Blank display.\n\t\t\tsetDisplayText( itemText );\n\t\t}\n\n\t\tif ( isNaN( lastToken ) && lastToken !== \")\" ) { // Last token is an operator or opening parenthesis.\n\t\t\tsetDisplayText( displayText + \" \" + itemText );\n\t\t}\n\t},\n\tappendParentheses: ( itemText, displayText, setDisplayText ) => {\n\t\tconst tokens = displayText.split( \" \" );\n\t\tconst lastToken = tokens[ tokens.length - 1 ];\n\n\t\tconst { openingParenthesesCount, closingParenthesesCount } = tokens.reduce( ( { openingParenthesesCount, closingParenthesesCount }, token ) => {\n\t\t\tif ( token === \"(\" ) {\n\t\t\t\treturn { openingParenthesesCount: openingParenthesesCount + 1, closingParenthesesCount: closingParenthesesCount };\n\t\t\t} else if ( token === \")\" ) {\n\t\t\t\treturn { openingParenthesesCount: openingParenthesesCount, closingParenthesesCount: closingParenthesesCount + 1 };\n\t\t\t}\n\n\t\t\treturn { openingParenthesesCount: openingParenthesesCount, closingParenthesesCount: closingParenthesesCount };\n\t\t}, { openingParenthesesCount: 0, closingParenthesesCount: 0 } );\n\n\t\tif ( displayText === \"0\" && itemText === \"(\" ) { // Can add opening parenthesis to blank display.\n\t\t\tsetDisplayText( \"(\" );\n\n\t\t\treturn;\n\t\t}\n\n\t\tif ( itemText === \"(\" && lastToken !== \")\" && isNaN( lastToken ) ) { // Opening parentheses only after opening parentheses and operators.\n\t\t\tsetDisplayText( displayText + \" (\" );\n\t\t} else if ( itemText === \")\" && closingParenthesesCount < openingParenthesesCount && ( lastToken === \")\" || !isNaN( lastToken ) ) ) { // Closing parentheses only after closing parentheses and numbers.\n\t\t\tsetDisplayText( displayText + \" )\" );\n\t\t}\n\t},\n\tappendNumber: ( itemText, displayText, setDisplayText ) => {\n\t\tconst tokens = displayText.split( \" \" );\n\t\tconst lastToken = tokens[ tokens.length - 1 ];\n\n\t\tif ( lastToken === \"0\" ) { // Ensure there's no leading zeros.\n\t\t\ttokens.pop( );\n\t\t\ttokens.push( itemText );\n\t\t\tsetDisplayText( tokens.join( \" \" ) );\n\n\t\t\treturn;\n\t\t}\n\n\t\tif ( isNaN( lastToken ) && lastToken !== \"-\" ) { // Last token is an operator that isn't a negative sign.\n\t\t\tif ( lastToken !== \")\" ) {\n\t\t\t\tsetDisplayText( displayText + \" \" + itemText );\n\t\t\t}\n\n\t\t\treturn;\n\t\t} else if ( lastToken === \"-\" && itemText === \"0\" ) { // Do not allow negative zero.\n\t\t\treturn;\n\t\t}\n\n\t\tsetDisplayText( displayText + itemText );\n\t},\n\tnegate: ( _, displayText, setDisplayText ) => {\n\t\tconst tokens = displayText.split( \" \" );\n\n\t\t// Go backward until a number is found.\n\t\tfor ( let i = tokens.length; i >= 0; i-- ) {\n\t\t\tconst sign = Math.sign( tokens[ i ] );\n\n\t\t\tif ( !isNaN( sign ) ) {\n\t\t\t\tif ( sign == 1 ) {\n\t\t\t\t\ttokens[ i ] = \"-\" + tokens[ i ];\n\t\t\t\t} else if ( sign == -1 ) {\n\t\t\t\t\ttokens[ i ] = tokens[ i ].substring( 1 );\n\t\t\t\t}\n\n\t\t\t\tsetDisplayText( tokens.join( \" \" ) );\n\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t},\n\tclear: ( _, __, setDisplayText ) => {\n\t\tsetDisplayText( \"0\" );\n\t},\n\tbackspace: ( _, displayText, setDisplayText ) => {\n\t\tconst tokens = displayText.split( \" \" );\n\t\tconst lastToken = tokens[ tokens.length - 1 ];\n\n\t\tif ( !isNaN( lastToken ) && lastToken.length > 1 ) { // Backspace only one number in a number.\n\t\t\ttokens.pop( );\n\t\t\ttokens.push( lastToken.substring( 0, lastToken.length - 1 ) );\n\t\t\tsetDisplayText( tokens.join( \" \" ) );\n\n\t\t\treturn;\n\t\t}\n\n\t\tif ( tokens.length === 1 ) { // Zero the display if there is only one token left.\n\t\t\tsetDisplayText( \"0\" );\n\n\t\t\treturn;\n\t\t}\n\n\t\ttokens.pop( );\n\t\tsetDisplayText( tokens.join( \" \" ) );\n\t},\n\tevaluate: ( _, displayText, setDisplayText ) => {\n\t\ttry { // For any exceptions that arise during calculation and any weird errors that are not caught already.\n\t\t\tif ( !checkExpression( displayText ) ) {\n\t\t\t\tthrow \"Expression failed pre-calculation validation\";\n\t\t\t}\n\n\t\t\tconst preprocessedDisplayText = insertMissingClosingParentheses( displayText );\n\t\t\tconst expressionResult = evaluateExpression( preprocessedDisplayText );\n\t\t\tsetDisplayText( expressionResult );\n\t\t} catch ( e ) {\n\t\t\tconsole.log( e );\n\t\t\talert( \"Failed to evaluate\" );\n\t\t}\n\t}\n};\n","import displayOperation from \"./display-operation\";\nimport { allOperations, unaryOperations } from \"./operations\";\n\nconst advancedOperationPad = new Map( [\n\t[\n\t\t\"SLL\",\n\t\t{\n\t\t\tonClick: displayOperation.appendOperation,\n\t\t\tprecedence: 5,\n\t\t\tevaluate: ( left, right ) => {\n\t\t\t\tif ( right < 0n ) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\treturn left << right;\n\t\t\t}\n\t\t}\n\t],\n\t[\n\t\t\"SRL32\",\n\t\t{\n\t\t\tonClick: displayOperation.appendOperation,\n\t\t\tprecedence: 5,\n\t\t\tevaluate: ( left, right ) => {\n\t\t\t\tif ( right < 0n ) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\tconst rightThirtyTwoBits = left & 4294967295n; // 2 ^ 32 - 1. Convert to unsigned 32-bit int.\n\n\t\t\t\treturn rightThirtyTwoBits >> right;\n\t\t\t}\n\t\t}\n\t],\n\t[\n\t\t\"SRA\",\n\t\t{\n\t\t\tonClick: displayOperation.appendOperation,\n\t\t\tprecedence: 5,\n\t\t\tevaluate: ( left, right ) => {\n\t\t\t\tif ( right < 0n ) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\treturn left >> right;\n\t\t\t}\n\t\t}\n\t],\n\t[\n\t\t\"ROL32\",\n\t\t{\n\t\t\tonClick: displayOperation.appendOperation,\n\t\t\tprecedence: 5,\n\t\t\tevaluate: ( left, right ) => {\n\t\t\t\tif ( right < 0n ) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\tconst rightThirtyTwoBits = left & 4294967295n; // 2 ^ 32 - 1. Convert to unsigned 32-bit int.\n\t\t\t\tconst rotateAmount = right % 32n;\n\t\t\t\tconst rotateResult = ( ( rightThirtyTwoBits << rotateAmount ) & 4294967295n ) | ( rightThirtyTwoBits >> ( 32n - rotateAmount ) );\n\n\t\t\t\treturn rotateResult >= 2147486648n ? rotateResult - 4294967296n : rotateResult; // Convert to signed 32-bit int.\n\t\t\t}\n\t\t}\n\t],\n\t[\n\t\t\"ROR32\",\n\t\t{\n\t\t\tonClick: displayOperation.appendOperation,\n\t\t\tprecedence: 5,\n\t\t\tevaluate: ( left, right ) => {\n\t\t\t\tif ( right < 0n ) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\tconst rightThirtyTwoBits = left & 4294967295n; // 2 ^ 32 - 1. Convert to unsigned 32-bit int.\n\t\t\t\tconst rotateAmount = right % 32n;\n\t\t\t\tconst rotateResult = ( rightThirtyTwoBits >> rotateAmount ) | ( ( rightThirtyTwoBits << ( 32n - rotateAmount ) ) & 4294967295n );\n\n\t\t\t\treturn rotateResult >= 2147486648n ? rotateResult - 4294967296n : rotateResult; // Convert to signed 32-bit int.\n\t\t\t}\n\t\t}\n\t],\n\t[\n\t\t\"POW\",\n\t\t{\n\t\t\tonClick: displayOperation.appendOperation,\n\t\t\trtl: true,\n\t\t\tprecedence: 2,\n\t\t\tevaluate: ( left, right ) => {\n\t\t\t\tif ( right < 0n ) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\treturn left ** right;\n\t\t\t}\n\t\t}\n\t],\n\t[\n\t\t\"NOT\",\n\t\t{\n\t\t\tunary: true,\n\t\t\tonClick: displayOperation.appendUnaryOperation,\n\t\t\trtl: true,\n\t\t\tprecedence: 1,\n\t\t\tevaluate: ( number ) => {\n\t\t\t\treturn ~number;\n\t\t\t}\n\t\t}\n\t],\n\t[\n\t\t\"AND\",\n\t\t{\n\t\t\tonClick: displayOperation.appendOperation,\n\t\t\tprecedence: 6,\n\t\t\tevaluate: ( left, right ) => {\n\t\t\t\treturn left & right;\n\t\t\t}\n\t\t}\n\t],\n\t[\n\t\t\"OR\",\n\t\t{\n\t\t\tonClick: displayOperation.appendOperation,\n\t\t\tprecedence: 8,\n\t\t\tevaluate: ( left, right ) => {\n\t\t\t\treturn left | right;\n\t\t\t}\n\t\t}\n\t],\n\t[\n\t\t\"(\",\n\t\t{\n\t\t\tonClick: displayOperation.appendParentheses\n\t\t}\n\t],\n\t[\n\t\t\")\",\n\t\t{\n\t\t\tonClick: displayOperation.appendParentheses\n\t\t}\n\t],\n\t[\n\t\t\"XOR\",\n\t\t{\n\t\t\tonClick: displayOperation.appendOperation,\n\t\t\tprecedence: 7,\n\t\t\tevaluate: ( left, right ) => {\n\t\t\t\treturn left ^ right;\n\t\t\t}\n\t\t}\n\t]\n] );\n\nadvancedOperationPad.forEach( ( operationDetails, operation ) => {\n\tif ( operationDetails.unary ) {\n\t\tunaryOperations.set( operation, true );\n\t}\n\n\tif ( operationDetails.evaluate ) {\n\t\tallOperations.set( operation, operationDetails );\n\t}\n} );\n\nexport default advancedOperationPad;\n","import displayOperation from \"./display-operation\";\nimport { allOperations, unaryOperations } from \"./operations\";\n\n// TO-DO: Implement Ans.\n// TO-DO: Update README and upload binaries when done.\n\nconst numpad = new Map( [\n\t[\n\t\t\"+/-\",\n\t\t{\n\t\t\tonClick: displayOperation.negate\n\t\t}\n\t],\n\t[\n\t\t\"C\",\n\t\t{\n\t\t\tonClick: displayOperation.clear\n\t\t}\n\t],\n\t[\n\t\t\"⌫\",\n\t\t{\n\t\t\tonClick: displayOperation.backspace\n\t\t}\n\t],\n\t[\n\t\t\"7\",\n\t\t{\n\t\t\tonClick: displayOperation.appendNumber\n\t\t}\n\t],\n\t[\n\t\t\"8\",\n\t\t{\n\t\t\tonClick: displayOperation.appendNumber\n\t\t}\n\t],\n\t[\n\t\t\"9\",\n\t\t{\n\t\t\tonClick: displayOperation.appendNumber\n\t\t}\n\t],\n\t[\n\t\t\"4\",\n\t\t{\n\t\t\tonClick: displayOperation.appendNumber\n\t\t}\n\t],\n\t[\n\t\t\"5\",\n\t\t{\n\t\t\tonClick: displayOperation.appendNumber\n\t\t}\n\t],\n\t[\n\t\t\"6\",\n\t\t{\n\t\t\tonClick: displayOperation.appendNumber\n\t\t}\n\t],\n\t[\n\t\t\"1\",\n\t\t{\n\t\t\tonClick: displayOperation.appendNumber\n\t\t}\n\t],\n\t[\n\t\t\"2\",\n\t\t{\n\t\t\tonClick: displayOperation.appendNumber\n\t\t}\n\t],\n\t[\n\t\t\"3\",\n\t\t{\n\t\t\tonClick: displayOperation.appendNumber\n\t\t}\n\t],\n\t[\n\t\t\"-\",\n\t\t{\n\t\t\tunary: true,\n\t\t\tonClick: displayOperation.appendUnaryOperation,\n\t\t\trtl: true,\n\t\t\tprecedence: 1,\n\t\t\tevaluate: ( number ) => {\n\t\t\t\treturn -number;\n\t\t\t}\n\t\t}\n\t],\n\t[\n\t\t\"0\",\n\t\t{\n\t\t\tonClick: displayOperation.appendNumber\n\t\t}\n\t],\n\t[\n\t\t\"ANS\",\n\t\t{\n\t\t\tonClick: ( ) => { }\n\t\t}\n\t],\n] );\n\nnumpad.forEach( ( operationDetails, operation ) => {\n\tif ( operationDetails.unary ) {\n\t\tunaryOperations.set( operation, true );\n\t}\n\n\tif ( operationDetails.evaluate ) {\n\t\tallOperations.set( operation, operationDetails );\n\t}\n} );\n\nexport default numpad;\n","import displayOperation from \"./display-operation\";\nimport { allOperations } from \"./operations\";\n\nconst basicOperationPad = new Map( [\n\t[\n\t\t\"÷INT\",\n\t\t{\n\t\t\tonClick: displayOperation.appendOperation,\n\t\t\tprecedence: 3,\n\t\t\tevaluate: ( left, right ) => {\n\t\t\t\tif ( right === 0n ) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\n\t\t\t\treturn left / right;\n\t\t\t}\n\t\t}\n\t],\n\t[\n\t\t\"×\",\n\t\t{\n\t\t\tonClick: displayOperation.appendOperation,\n\t\t\tprecedence: 3,\n\t\t\tevaluate: ( left, right ) => {\n\t\t\t\treturn left * right;\n\t\t\t}\n\t\t}\n\t],\n\t[\n\t\t\"−\",\n\t\t{\n\t\t\tonClick: displayOperation.appendOperation,\n\t\t\tprecedence: 4,\n\t\t\tevaluate: ( left, right ) => {\n\t\t\t\treturn left - right;\n\t\t\t}\n\t\t}\n\t],\n\t[\n\t\t\"+\",\n\t\t{\n\t\t\tonClick: displayOperation.appendOperation,\n\t\t\tprecedence: 4,\n\t\t\tevaluate: ( left, right ) => {\n\t\t\t\treturn left + right;\n\t\t\t}\n\t\t}\n\t],\n\t[\n\t\t\"=\",\n\t\t{\n\t\t\tonClick: displayOperation.evaluate\n\t\t}\n\t]\n] );\n\nbasicOperationPad.forEach( ( operationDetails, operation ) => {\n\tif ( operationDetails.evaluate ) {\n\t\tallOperations.set( operation, operationDetails );\n\t}\n} );\n\nexport default basicOperationPad;\n","import React from \"react\";\nimport DisplayTextContext from \"../contexts/display-text-context\";\nimport Display from \"./Display\";\nimport SecondaryDisplay from \"./SecondaryDisplay\";\nimport { Grid } from \"@material-ui/core\";\nimport ButtonPad from \"./ButtonPad\";\nimport advancedOperationPad from \"../util/advanced-operation-pad\";\nimport numpad from \"../util/numpad\";\nimport basicOperationPad from \"../util/basic-operation-pad\";\n\nfunction MainScreen( ) {\n\tconst [ displayText, setDisplayText ] = React.useState( \"0\" );\n\n\treturn (\n\t\t<div style={ { display: \"flex\", flexDirection: \"column\", height: \"100vh\" } }>\n\t\t\t<DisplayTextContext.Provider value={ [ displayText, setDisplayText ] }>\n\t\t\t\t<Display />\n\t\t\t\t<SecondaryDisplay />\n\n\t\t\t\t<div style={ { flex: 1, padding: \"30px\" } }>\n\t\t\t\t\t<Grid container justify=\"center\" spacing={ 3 } style={ { alignItems: \"center\", height: \"100%\" } }>\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<ButtonPad fontSize=\"24px\" height=\"275px\" operations={ advancedOperationPad } width=\"300px\" xs={ 4 } />\n\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<ButtonPad fontSize=\"24px\" height=\"275px\" operations={ numpad } width=\"250px\" xs={ 4 } />\n\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t<ButtonPad fontSize=\"24px\" height=\"275px\" operations={ basicOperationPad } width=\"75px\" xs={ 12 } />\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</div>\n\t\t\t</DisplayTextContext.Provider>\n\t\t</div>\n\t);\n}\n\nexport default MainScreen;\n","import \"@fontsource/roboto\";\nimport \"@fontsource/roboto-mono\";\n\nimport React from \"react\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\nimport MainScreen from \"./components/MainScreen\";\n\nconst lightTheme = createMuiTheme( {\n\tpalette: {\n\t\tbackground: {\n\t\t\tdefault: \"#DDDDDD\",\n\t\t\tpaper: \"#CCCCCC\"\n\t\t},\n\t\tprimary: {\n\t\t\tmain: \"#000000\"\n\t\t},\n\t\tsecondary: {\n\t\t\tmain: \"#FF9B48\"\n\t\t},\n\t\ttype: \"light\"\n\t}\n} );\n\nconst darkTheme = createMuiTheme( {\n\tpalette: {\n\t\tbackground: {\n\t\t\tdefault: \"#202020\",\n\t\t\tpaper: \"#2E2E2E\"\n\t\t},\n\t\tprimary: {\n\t\t\tmain: \"#FFFFFF\"\n\t\t},\n\t\tsecondary: {\n\t\t\tmain: \"#FF9B48\"\n\t\t},\n\t\ttype: \"dark\"\n\t}\n} );\n\nfunction App( ) {\n\tconst [ darkMode, setDarkMode ] = React.useState( false );\n\n\tReact.useEffect( ( ) => {\n\t\tconst mql = window.matchMedia( \"(prefers-color-scheme: dark)\" );\n\t\tsetDarkMode( mql.matches );\n\n\t\tmql.addEventListener( \"change\", ( e ) => {\n\t\t\tsetDarkMode( e.matches );\n\t\t} );\n\t}, [ ] );\n\n\treturn (\n\t\t<MuiThemeProvider theme={ darkMode ? darkTheme : lightTheme }>\n\t\t\t<CssBaseline />\n\t\t\t<MainScreen />\n\t\t</MuiThemeProvider>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById( \"root\" )\n);\n"],"sourceRoot":""}